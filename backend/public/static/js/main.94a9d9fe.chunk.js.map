{"version":3,"sources":["assets/img/7.jpg","serviceWorker.js","store/reducers/taskReducer.js","store/store.js","services/httpService.js","services/taskService.js","store/actions/taskAction.js","cmps/TaskPreview.jsx","cmps/TaskList.jsx","services/socketService.js","pages/TaskAdd.jsx","pages/TaskApp.jsx","pages/Home.jsx","cmps/Header.jsx","App.jsx","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","initialState","tasks","modalAdd","rootReducer","combineReducers","taskReducer","state","action","type","map","task","_id","filter","taskId","modalStatus","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","axios","Axios","create","withCredentials","endpoint","data","ajax","a","async","method","url","res","console","log","dir","response","status","assign","taskService","query","filterBy","httpService","getById","remove","save","triesCount","lastTriedAt","doneAt","start","loadTasks","dispatch","saveTask","actionType","_task","toggleModal","TaskPreview","props","dateToString","Date","createdAt","toLocaleString","className","onClick","ev","onStart","title","importance","onDelete","TaskList","key","socket","_TaskAdd","description","msgWarning","handleInput","target","field","name","value","setState","prevState","onSubmit","preventDefault","printMsg","onCloseModal","stopPropagation","msg","this","setTimeout","autoComplete","autoFocus","onChange","min","max","Component","mapDispatchToProps","TaskAdd","connect","socketService","setup","io","terminate","on","eventName","cb","off","emit","_TaskApp","onSetFilter","removeTask","startTask","openAddModal","Fab","color","aria-label","TaskApp","Home","to","src","require","alt","Header","exact","_App","component","path","App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.94a9d9fe.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/7.7609e38d.jpg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\r\n    tasks: [],\r\n    modalAdd: false\r\n}\r\n\r\nexport function taskReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_TASKS':\r\n            return {\r\n                ...state,\r\n                tasks: action.tasks\r\n            }\r\n        case 'EDIT_TASK':\r\n            return {\r\n                ...state,\r\n                tasks: state.tasks.map(task => {\r\n                    if (action.task._id === task._id) return action.task\r\n                    return task;\r\n                })\r\n            }\r\n        case 'ADD_TASK':\r\n            return {\r\n                ...state, tasks: [...state.tasks, action.task]\r\n            }\r\n        case 'REMOVE_TASK':\r\n            return { ...state, tasks: state.tasks.filter(task => task._id !== action.taskId) }\r\n        case 'SET_MODAL':\r\n            return { ...state, modalAdd: action.modalStatus}\r\n        default:\r\n            return state\r\n    }\r\n}","import { createStore, applyMiddleware, compose, combineReducers } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { taskReducer } from './reducers/taskReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    taskReducer\r\n})\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))","import Axios from 'axios';\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n    ? '/api/'\r\n    : '//localhost:3030/api/'\r\n\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n});\r\n\r\nexport default {\r\n    get(endpoint, data) {\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\nasync function ajax(endpoint, method = 'get', data = null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data\r\n        })\r\n        return res.data;\r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`);\r\n        console.dir(err);\r\n        if (err.response && err.response.status === 401) {\r\n            window.location.assign('/');\r\n        }\r\n        throw err;\r\n    }\r\n}","\r\nimport httpService from './httpService';\r\n\r\nexport const taskService = {\r\n    query,\r\n    getById,\r\n    remove,\r\n    save,\r\n    start\r\n}\r\n\r\nasync function query(filterBy) {\r\n    // if (filterBy) var queryStr = `?name=${filterBy.name}&inStock=${filterBy.inStock}&type=${filterBy.type}&sortBy=${sortBy}`;\r\n    var queryStr = '';\r\n    const tasks = await httpService.get(`task${queryStr}`);\r\n    return tasks;\r\n}\r\n\r\nasync function getById(taskId) {\r\n    return httpService.get(`task/${taskId}`);\r\n}\r\n\r\nasync function remove(taskId) {\r\n    return httpService.delete(`task/${taskId}`);\r\n}\r\n\r\nasync function save(task) {\r\n    if (task._id) {\r\n        return httpService.put(`task/${task._id}`, task);\r\n    } else {\r\n        task.triesCount = 0;\r\n        task.lastTriedAt = null;\r\n        task.doneAt = null;\r\n        return httpService.post(`task`, task);\r\n    }\r\n}\r\n\r\nasync function start(task){\r\n    console.log(\"start -> task\", task)\r\n    return httpService.put(`task/${task._id}/start`, task);\r\n}","import { taskService } from \"../../services/taskService\"\r\n\r\nexport function loadTasks(filterBy) {\r\n  return async dispatch => {\r\n    const tasks = await taskService.query(filterBy);\r\n    dispatch({ type: 'SET_TASKS', tasks })\r\n  };\r\n}\r\n\r\nexport function saveTask(task) {\r\n  return async dispatch => {\r\n    const actionType = task._id ? 'EDIT_TASK' : 'ADD_TASK';\r\n    const _task = await taskService.save(task);\r\n    dispatch({ type: actionType, task: _task })\r\n  };\r\n}\r\n\r\nexport function removeTask(taskId) {\r\n  return async dispatch => {\r\n    await taskService.remove(taskId)\r\n    dispatch({ type: 'REMOVE_TASK', taskId })\r\n  };\r\n}\r\nexport function startTask(task) {\r\n  return async dispatch => {\r\n    await taskService.start(task)\r\n    dispatch({ type: 'EDIT_TASK', task })\r\n  };\r\n}\r\n\r\nexport function toggleModal(modalStatus) {\r\n  return async dispatch => {\r\n    dispatch({ type: 'SET_MODAL', modalStatus })\r\n  };\r\n}","import React from 'react'\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\r\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\r\nimport PriorityHighIcon from '@material-ui/icons/PriorityHigh';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\r\nexport function TaskPreview(props) {\r\n    const { task } = props;\r\n    const date = new Date(task.createdAt);\r\n    const dateToString = date.toLocaleString();\r\n    return (\r\n        <section className={`task-preview flex space-between ${task.doneAt ? 'done' : ''}`}>\r\n            <div className= \"flex\">\r\n                <div className=\"start-btn flex align-center\">\r\n                    {!task.doneAt &&\r\n                        <button onClick={(ev) => props.onStart(ev, task)}><PlayCircleOutlineIcon /></button>}\r\n                    {task.doneAt && <button ><DoneOutlineIcon /></button>}\r\n                </div>\r\n                <ul className=\"task-info clean-list\">\r\n                    <li className=\"task-title\">{task.title}</li>\r\n                    <li><DescriptionIcon/> Description</li>\r\n                    <li><PriorityHighIcon/> Importance: {task.importance}</li>\r\n                    <li><AccessTimeIcon /> Created At: {dateToString}</li>\r\n                    <li><HourglassEmptyIcon/> Tries count: {task.triesCount}</li>\r\n                </ul>\r\n            </div>\r\n            <div className=\"delete-btn flex align-center\">\r\n                <button onClick={(ev) => props.onDelete(ev, task._id)}><DeleteIcon /></button>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport { TaskPreview } from './TaskPreview'\r\n\r\n\r\nexport function TaskList(props) {\r\n    const { tasks } = props;\r\n    if (!tasks) return <h1>Loading..</h1>\r\n    return (\r\n        <div className=\"task-list grid\">\r\n            {tasks.map(task => <TaskPreview key={task._id} task={task} onDelete={props.onDelete} onStart={props.onStart} />)}\r\n        </div>\r\n    )\r\n}","import io from 'socket.io-client';\r\n\r\nconst BASE_URL =\r\n  process.env.NODE_ENV === 'production' ? '/' : '//localhost:3030';\r\n\r\nlet socket;\r\n\r\nexport const socketService = {\r\n  setup,\r\n  terminate,\r\n  on,\r\n  off,\r\n  emit,\r\n};\r\n\r\nfunction setup() {\r\n  socket = io(BASE_URL);\r\n}\r\n\r\nfunction terminate() {\r\n  socket = null;\r\n}\r\n\r\nfunction on(eventName, cb) {\r\n  socket.on(eventName, cb);\r\n}\r\n\r\nfunction off(eventName, cb) {\r\n  socket.off(eventName, cb);\r\n}\r\n\r\nfunction emit(eventName, data) {\r\n  socket.emit(eventName, data);\r\n}","\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { loadTasks, saveTask, toggleModal } from '../store/actions/taskAction'\r\n\r\nclass _TaskAdd extends Component {\r\n    state = {\r\n        task: {\r\n            title: '',\r\n            description: '',\r\n            importance: ''\r\n        },\r\n        msgWarning: '',\r\n    }\r\n\r\n    printMsg(msg) {\r\n        this.setState({ msgWarning: msg });\r\n        setTimeout(() => {\r\n            this.setState({ msgWarning: '' });\r\n        }, 2000)\r\n    }\r\n\r\n    handleInput = ({ target }) => {\r\n        const field = target.name;\r\n        const value = target.value;\r\n        this.setState(prevState => {\r\n            return {\r\n                task: {\r\n                    ...prevState.task,\r\n                    [field]: value\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    onSubmit = async (ev) => {\r\n        ev.preventDefault();\r\n        if (!this.state.task.title) {\r\n            this.printMsg('Title of task is required');\r\n            return;\r\n        }\r\n        if (!this.state.task.importance) {\r\n            this.printMsg('Importance of task is required');\r\n            return;\r\n        }\r\n        await this.props.saveTask(this.state.task);\r\n        this.props.loadTasks();\r\n\r\n        this.setState({\r\n            task: {\r\n                title: '',\r\n                description: '',\r\n                importance: ''\r\n            }\r\n        })\r\n        this.props.toggleModal(false);\r\n    }\r\n\r\n    onCloseModal = (ev) => {\r\n        ev.stopPropagation();\r\n        this.props.toggleModal(false);\r\n    }\r\n\r\n    render() {\r\n        const { task } = this.state;\r\n        return (\r\n            <section className=\"task-add flex\" onClick={(ev) => this.onCloseModal(ev)}>\r\n                <form onClick={(ev) => { ev.stopPropagation() }} className=\"from-add flex column\" onSubmit={this.onSubmit}>\r\n                    <h2>New Task: </h2>\r\n                    <label>Title:</label>\r\n                    <input\r\n                        autoComplete=\"off\"\r\n                        autoFocus\r\n                        type=\"txt\"\r\n                        value={task.name}\r\n                        name=\"title\"\r\n                        onChange={this.handleInput}\r\n                    />\r\n                    <label>Description:</label>\r\n                    <input\r\n                        autoComplete=\"off\"\r\n                        type=\"txt\"\r\n                        value={task.description}\r\n                        name=\"description\"\r\n                        onChange={this.handleInput}\r\n                    />\r\n                    <label>Importance(1-3):</label>\r\n                    <input className=\"input-impo\"\r\n                        type=\"number\"\r\n                        name=\"importance\"\r\n                        min=\"1\" max=\"3\"\r\n                        onChange={this.handleInput}\r\n                    />\r\n                    <div className=\"msg-warnning\">\r\n                        {this.state.msgWarning && <label>{this.state.msgWarning}</label>}\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn-add-task\">Add Task</button>\r\n                </form>\r\n                {/* <button onClick={() => this.props.toggleModal(false)} className=\"btn-cancle\">Cancle</button> */}\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    saveTask,\r\n    loadTasks,\r\n    toggleModal\r\n}\r\nexport const TaskAdd = connect(mapStateToProps, mapDispatchToProps)(_TaskAdd)","\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport { loadTasks, removeTask, saveTask, startTask, toggleModal } from '../store/actions/taskAction'\r\nimport { TaskList } from '../cmps/TaskList'\r\nimport { TaskAdd } from './TaskAdd'\r\nimport { socketService } from '../services/socketService'\r\n\r\nclass _TaskApp extends Component {\r\n    state = {\r\n        filterBy: null,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.loadTasks(this.state.filterBy);\r\n        socketService.setup();\r\n        socketService.emit('update tasks');\r\n        socketService.on('update tasks', this.props.loadTasks);\r\n    }\r\n\r\n    onSetFilter = (filterBy) => {\r\n        this.setState({ filterBy }, () => this.loadTasks())\r\n    }\r\n\r\n    onDelete = (ev, taskId) => {\r\n        ev.stopPropagation();\r\n        this.props.removeTask(taskId);\r\n    }\r\n\r\n    onStart = async (ev, task) => {\r\n        ev.stopPropagation();\r\n        await this.props.startTask(task);\r\n        this.props.loadTasks();\r\n    }\r\n\r\n    openAddModal = () => {\r\n        this.props.toggleModal(true);\r\n    }\r\n\r\n    render() {\r\n        const { tasks, modalAdd } = this.props;\r\n        if (!tasks) return <h1>Loading..</h1>\r\n        return (\r\n            <section className=\"task-app main-container\">\r\n                {/* <h1>Tasks</h1> */}\r\n                <TaskList tasks={tasks} onDelete={this.onDelete} onStart={this.onStart} />\r\n                <Fab className=\"btn-add\" color=\"#ffe3b0\" aria-label=\"add\" onClick={this.openAddModal}>\r\n                    <AddIcon  />\r\n                </Fab>\r\n                {/* <button className=\"btn-add\" onClick={this.openAddModal}>\r\n                    Add Task\r\n                </button> */}\r\n                {modalAdd && <TaskAdd />}\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        tasks: state.taskReducer.tasks,\r\n        modalAdd: state.taskReducer.modalAdd,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadTasks,\r\n    removeTask,\r\n    saveTask,\r\n    startTask,\r\n    toggleModal\r\n}\r\nexport const TaskApp = connect(mapStateToProps, mapDispatchToProps)(_TaskApp)","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nexport class Home extends Component {\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"home\">\r\n        <div className=\"hero-title flex column align-center\">\r\n          <h2>Manage your tasks..</h2>\r\n          <button className=\"btn-get-start\">\r\n            <NavLink to='/task'>Get Start</NavLink>\r\n          </button>\r\n        </div>\r\n        <div className=\"hero-img\">\r\n          <img src={require('../assets/img/7.jpg')} alt=\"\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport EmojiPeopleIcon from '@material-ui/icons/EmojiPeople';\r\n\r\nexport function Header() {\r\n    return <nav className=\"main-header \">\r\n        <div className=\"main-container-header flex space-between align-center\">\r\n            <NavLink\r\n                className=\"logo flex align-center\"\r\n                exact to='/'>\r\n                <EmojiPeopleIcon />\r\n            Mister\r\n            <span>Tasker</span>\r\n            </NavLink>\r\n            <ul className=\"nav-list clean-list flex\">\r\n                <li><NavLink to='/task'>Your tasks | </NavLink></li>\r\n                <li><NavLink to='/task'>About</NavLink></li>\r\n            </ul>\r\n        </div>\r\n    </nav>\r\n}\r\n\r\n","// OUTSOURCE IMPORT\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Switch } from 'react-router-dom';\r\n// LOCAL IMPORT\r\nimport { TaskApp } from './pages/TaskApp';\r\nimport { Home } from './pages/Home';\r\nimport { Header } from './cmps/Header'\r\nclass _App extends Component {\r\n    componentDidMount() {\r\n        // SOCKETS\r\n        // socketService.setup();\r\n        // socketService.on('got box status', this.props.setBoxStatus);\r\n        // socketService.on('joined new box', this.props.loadConnectedUsers)\r\n        // socketService.on('box changed', this.props.gotBoxUpdate);\r\n        // socketService.on('chat addMsg', this.props.addMsg);\r\n        // socketService.on('got player update', this.props.updateLocalPlayer);\r\n        // socketService.on('got active boxes', this.props.setActiveBoxes);\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <header>\r\n                    <Header />\r\n                </header>\r\n                <main >\r\n                    <Switch>\r\n                        <Route component={TaskApp} path=\"/task\" />\r\n                        <Route component={Home} path=\"/\" />\r\n                    </Switch>\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n\r\n}\r\nexport const App = connect(mapStateToProps, mapDispatchToProps)(_App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './store/store';\nimport { App } from './App.jsx';\nimport './assets/scss/global.scss'\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}